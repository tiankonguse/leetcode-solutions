// http://noi.openjudge.cn/ch0109/04/

#include <bits/stdc++.h>
using namespace std;
const int N = 110;
char name[N][25];    // 定义一个二维字符数组
int qg, bg;          // 表示两个成绩
char gan[5], xi[5];  // 表示是否是干部，是否是西部学生
int num;             // 表示论文的数量
int score[N];        // 每个人总的奖学金
int main() {
  int n, i;
  memset(score, 0, sizeof(score));
  cin >> n;
  for (i = 0; i < n; i++) {  // 一边输入一边处理
    // scanf("%s %d %d %c %c %d",name[i],qg,bg,gan,xi,num);
    cin >> name[i] >> qg >> bg >> gan >> xi >> num;
    if (qg > 80 && num >= 1) score[i] += 8000;
    if (qg > 85 && bg > 80) score[i] += 4000;
    if (qg > 90) score[i] += 2000;
    if (qg > 85 && xi[0] == 'Y') score[i] += 1000;
    if (bg > 80 && gan[0] == 'Y') score[i] += 850;
  }
  int max = 0;
  int k;
  int totle = 0;
  for (i = 0; i < n; i++) {
    totle += score[i];
    if (score[i] >
        max) {  // 只有后面的比它大才替换，因为说的是要找第一个最多的人
      max = score[i];
      k = i;  // 标记最多的人，找到它的名字
    }
  }
  // printf("%s\n%d\n%d\n",name[k],score[k],totle);
  cout << name[k] << endl << score[k] << endl << totle << endl;
  return 0;
}

/*
题目描述
某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同：

院士奖学金，每人 8000 元，期末平均成绩高于 80
分（>80），并且在本学期内发表1篇或1篇以上论文的学生均可获得； 五四奖学金，每人
4000 元，期末平均成绩高于 85 分（>85），并且班级评议成绩高于 80
分（>80）的学生均可获得； 成绩优秀奖，每人 2000 元，期末平均成绩高于 90
分（>90）的学生均可获得； 西部奖学金，每人 1000 元，期末平均成绩高于 85
分（>85）的西部省份学生均可获得； 班级贡献奖，每人 850 元，班级评议成绩高于 80
分（>80）的学生干部均可获得；
只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是
87 分，班级评议成绩 82
分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是
4850 元。

现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。

输入格式
第一行是1个整数N，表示学生的总数。

接下来的 N
行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文字母组成的长度不超过
20 的字符串（不含空格）；期末平均成绩和班级评议成绩都是 0 到 100之间的整数（包括
0和 100）；是否是学生干部和是否是西部省份学生分别用 1 个字符表示，Y 表示是，N
表示不是；发表的论文数是 0 到 10 的整数（包括 0 和
10）。每两个相邻数据项之间用一个空格分隔。

输出格式
共 3 行。

第
1行是获得最多奖金的学生的姓名。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。
第 2 行是这名学生获得的奖金总数。
第 3 行是这 N 个学生获得的奖学金的总数。
输入输出样例
输入
4
YaoLin 87 82 Y N 0
ChenRuiyi 88 78 N Y 1
LiXin 92 88 N N 0
ZhangQin 83 87 Y N 1
输出
ChenRuiyi
9000
28700

说明/提示
【数据范围】

1≤N≤100。

【题目来源】

NOIP 2005 提高组第一题

【题目考点】
1. 模拟
2. 求和
3. 求最值
【解题思路】
本题考查对稍微复杂的业务逻辑的模拟，需要答题者有良好的代码组织能力，即每个变量的意义要明确，组织要清晰，添加合理的注释，力求使自己写的代码自己要能看懂（不要觉得这是很容易的事情）。
本题可以用多个数组完成，也可以用结构体数组完成。
（推荐使用结构体。使用结构体的目的就是使代码语意更明确。这一点十分重要，可以帮助你少出bug，或出bug后容易查bug，能帮你节省大量时间）

【题解代码】
解法1：使用多个数组

解法2：使用结构体

*/